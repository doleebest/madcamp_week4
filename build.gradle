plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'madcamp4'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.cloud:spring-cloud-starter'



	// Exclude Spring Boot's default logging
	configurations {
		implementation.exclude module: 'spring-boot-starter-logging'
	}

	// Add Log4j2 dependency
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-security'


	// Firebase
	// implementation 'com.google.firebase:firebase-database:20.3.2'
	implementation 'com.google.firebase:firebase-admin:9.1.1'
	//implementation 'com.google.firebase:firebase-admin:latest-version'
	implementation 'com.google.firebase:firebase-storage:20.0.0'
	implementation 'com.google.firebase:firebase-auth:21.0.0'  // For Firebase Authentication
	implementation 'com.google.firebase:firebase-database:20.0.3'  // For Firebase Realtime Database
	implementation platform('com.google.cloud:libraries-bom:26.1.4')
	implementation 'com.google.cloud:google-cloud-storage'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'ch.qos.logback:logback-classic'
	implementation 'org.slf4j:slf4j-api'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
}

configurations.all {
	exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	exclude group: 'ch.qos.logback', module: 'logback-classic'
	exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

tasks.named('test') {
	useJUnitPlatform()
	enabled = false
}
//
//tasks.withType(JavaExec) {
//	jvmArgs = ['--add-opens', 'java.base/java.time.chrono=ALL-UNNAMED']
//}

bootRun {
	jvmArgs = [
			'--add-opens', 'java.base/java.time.chrono=ALL-UNNAMED',
			'--add-opens', 'java.base/java.time=ALL-UNNAMED',
			'--add-opens', 'java.base/java.util=ALL-UNNAMED'
	]
}
